    <federation name="{{ federation.name }}"{% if federation["user"] is defined %} user="{{ federation["user"] }}"{% endif %}{% if federation["password"] is defined %} password="{{ federation["password"] }}"{% endif %}>
        {% if federation["upstreams"] is defined and federation["upstreams"] |length > 0 %}{% for upstream in federation["upstreams"] %}
        <upstream name="{{ upstream.name }}"{% if upstream["user"] is defined %} user="{{ upstream["user"] }}"{% endif %} {% if upstream["password"] is defined %} password="{{ upstream["password"] }}"{% endif %}{% if upstream.priority_adjustment is defined %} priority-adjustment="{{ upstream.priority_adjustment }}"{% endif %}>
            {% if upstream.parameters is defined and upstream.parameters |length > 0 %}{% for param in lookup('ansible.builtin.dict', upstream.parameters, wantlist=True) %}
            <{{ param.key | replace('_','-') }}>{{ param.value }}</{{ param.key | replace('_','-') }}>
            {% endfor %}{% endif %}
            {% if upstream["static_connectors"] is defined and upstream["static_connectors"] |length > 0 %}
            <static-connectors>
                {% for connector_ref in  upstream["static_connectors"] %}
                <connector-ref>"{{ connector_ref }}"</connector-ref>
                {% endfor %}
            </static-connectors>
            {% endif %}
            {% if upstream["discovery_group"] is defined %}
            <discovery-group-ref discovery-group-name="{{ upstream.discovery_group }}"/>
            {% endif %}            
            {% if upstream["policies"] is defined and upstream["policies"] |length > 0 %}{% for policy in upstream["policies"] %}
            <policy ref="{{ policy }}"/>
            {% endfor %}{% endif %}
        </upstream>
        {% endfor %}{% endif %}
        {% if federation.downstreams is defined and federation.downstreams |length > 0 %}{% for downstream in federation["downstreams"] %}
        <downstream name="{{ downstream.name }}">
            {% for param in lookup('ansible.builtin.dict', downstream.parameters, wantlist=True) %}
            <{{ param.key | replace('_','-') }}>{{ param.value }}</{{ param.key | replace('_','-') }}>
            {% endfor %}
            {% if downstream["discovery_group"] is defined %}
            <discovery-group-ref discovery-group-name="{{ downstream.discovery_group }}"/>
            {% endif %}  
            {% if downstream["static_connectors"] is defined and downstream["static_connectors"] |length > 0 %}
            <static-connectors>
                {% for connector_ref in  downstream["static_connectors"] %}
                    <connector-ref>"{{ connector_ref }}"</connector-ref>
                {% endfor %}
            </static-connectors>
            {% endif %}
            {% if downstream["policies"] is defined and downstream["policies"] |length > 0 %}{% for policy in downstream["policies"] %}
            <policy ref="{{ policy }}"/>
            {% endfor %}{% endif %}
            {% if downstream.upstream_connector_ref is defined%}<upstream-connector-ref>{{downstream.upstream_connector_ref}}</upstream-connector-ref> {% endif %}
        </downstream>
        {% endfor %}{% endif %}
        {% if federation["policy_sets"] is defined and federation["policy_sets"] |length > 0 %}
        {% for policy_set in federation["policy_sets"] %}
        <policy-set name="{{ policy_set.name }}">
            {% for policy in policy_set["policies"] %}
                <policy ref="{{ policy }}"/>
            {% endfor %}
        </policy-set>
        {% endfor %}{% endif %}
        {% if federation["queue_policies"] is defined and federation["queue_policies"] |length > 0 %}
        {% for policy in federation["queue_policies"] %}
        <queue-policy name="{{ policy.name }}" {% if policy.parameters is defined %}{% for param in lookup('ansible.builtin.dict', policy.parameters, wantlist=True) %} {{ param.key | replace('_','-') }}="{{ param.value }}"{% endfor %}{% endif %}>
            {% if policy.includes is defined and policy.includes |length > 0 %}{% for include in policy.includes  %}
            <include queue-match="{{include.queue_match}}" address-match="{{include.address_match}}"/>
            {% endfor %}{% endif %}
            {% if policy.excludes is defined and policy.excludes |length > 0 %}{% for exclude in policy.excludes  %}
            <exclude queue-match="{{exclude.queue_match}}" address-match="{{exclude.address_match}}"/>
            {% endfor %}{% endif %}
        </queue-policy>
        {% endfor %}{% endif %}
        {% if federation["address_policies"] is defined and federation["address_policies"] |length > 0 %}
        {% for policy in federation["address_policies"] %}
        <address-policy name="{{ policy.name }}" {% if policy.parameters is defined %}{% for param in lookup('ansible.builtin.dict', policy.parameters, wantlist=True) %} {{ param.key | replace('_','-') }}="{{ param.value }}"{% endfor %}{% endif %}>
            {% if policy.includes is defined and policy.includes |length > 0 %}{% for include in policy.includes  %}
            <include address-match="{{include}}"/>
            {% endfor %}{% endif %}
            {% if policy.excludes is defined and policy.excludes |length > 0 %}{% for exclude in policy.excludes %}
            <exclude address-match="{{exclude}}"/>
            {% endfor %}{% endif %}
        </address-policy>
        {% endfor %}{% endif %}
        {% if federation["transformers"] is defined and federation["transformers"] |length > 0 %}
        {% for transformer in federation["transformers"] %}
        <transformer name="{{ transformer.name }}">
            <class-name>{{transformer.class_name}}</class-name>
            {% if transformer.properties is defined %}
            {% for property in transformer.properties %}
            <property key="{{ property.key }}" value="{{ property.value }}"/>
            {% endfor %}
            {% endif %}
        </transformer>
        {% endfor %}{% endif %}
      </federation>
